{
    "1": {
        "id": 1,
        "class": "Sequence",
        "name": "",
        "options": {},
        "children": [
            "9c8b70a8-6087-4b07-a441-fa49f5bfd22e",
            "a4e76867-6c04-4d87-a33a-904a29ce110c",
            "f197d805-fc57-4e0d-b0b7-1e8d6b875c08",
            "23c4c4e0-a0ee-43ce-ac55-dd2c3ccd6356",
            "c646d335-178f-4567-a2f2-f6f801ea02c5",
            "9e9f6dac-991b-4207-be40-d7c31fcc34fa"
        ]
    },
    "meta": {
        "version": 1
    },
    "9c8b70a8-6087-4b07-a441-fa49f5bfd22e": {
        "id": "9c8b70a8-6087-4b07-a441-fa49f5bfd22e",
        "class": "LookAt",
        "name": "",
        "options": {
            "getTarget": [
                "() => {",
                "    console.log(\"gettarget\");",
                "    let entity = jibo.lps.getClosestVisualEntity();",
                "    notepad.foundFace = false;",
                "    let position = {x: 1, y: 0, z: 1}",
                "    if (entity) {",
                "    //we want to be done after we go there!  ",
                "        position = {x: entity.position.x, y: entity.position.y, z: entity.position.z};",
                "        notepad.toMoveTo = position;",
                "        notepad.foundFace = true;",
                "    }",
                "    //otherwise just chill",
                "    return position;",
                "}"
            ],
            "isContinuous": true,
            "config": [
                "(lookAt) => {",
                "  ",
                "      console.log(\"lookat\");",
                "}"
            ]
        },
        "asset-pack": "core",
        "parent": 1,
        "decorators": [
            "f8d42665-4fa7-46a7-bce9-f3145c025aaf"
        ]
    },
    "a4e76867-6c04-4d87-a33a-904a29ce110c": {
        "id": "a4e76867-6c04-4d87-a33a-904a29ce110c",
        "class": "PlayAudio",
        "name": "",
        "options": {
            "audioPath": "FX_Whistle.mp3"
        },
        "asset-pack": "core",
        "parent": 1
    },
    "f8d42665-4fa7-46a7-bce9-f3145c025aaf": {
        "id": "f8d42665-4fa7-46a7-bce9-f3145c025aaf",
        "class": "WhileCondition",
        "options": {
            "init": [
                "() => {",
                "}"
            ],
            "conditional": [
                "() => {",
                "}"
            ]
        },
        "asset-pack": "core"
    },
    "f197d805-fc57-4e0d-b0b7-1e8d6b875c08": {
        "id": "f197d805-fc57-4e0d-b0b7-1e8d6b875c08",
        "class": "TakePhoto",
        "name": "",
        "options": {
            "resolution": 2,
            "onPhoto": [
                "(error, imageUrl) => {",
                "  notepad.imageUrl = imageUrl;",
                "}"
            ],
            "noDistortion": true
        },
        "asset-pack": "core",
        "parent": 1
    },
    "23c4c4e0-a0ee-43ce-ac55-dd2c3ccd6356": {
        "id": "23c4c4e0-a0ee-43ce-ac55-dd2c3ccd6356",
        "class": "ExecuteScript",
        "name": "",
        "options": {
            "exec": [
                "() => {",
                "  //redraw every frame",
                "  jibo.face.renderOnlyWhenDirty = false; ",
                "  ",
                "  // create new Pixi sprite",
                "  notepad.photo = new PIXI.Sprite();",
                "  ",
                "  // set the texture of the sprite to the imageURL",
                "  notepad.photo.texture = PIXI.Texture.fromImage(notepad.imageUrl);",
                "  ",
                "  //Emotion API return data",
                "  var fs = require('fs');",
                "  var request = require('request');",
                "  //Creates file from taken picture",
                "  request.get({url: notepad.imageUrl, encoding: 'binary'}, function (err, response, body) {",
                "    fs.writeFile(\"./face.jpg\", body, 'binary', function(err) {",
                "      if(err)",
                "        console.log(err);",
                "      else",
                "        console.log(\"The file was saved!\");",
                "    }); ",
                "  });",
                "  ",
                "  var oxfordEmotion = require(\"node-oxford-emotion\")(\"3e43fabb36c940eaaa66b84ab5840869\");",
                "  var bitmap = fs.readFileSync(\"./face.jpg\");",
                "  var bf = new Buffer(bitmap.toString('binary'),'binary');",
                "  var emotion = oxfordEmotion.recognize(\"image\", bf, function(cb) {",
                "    var data = JSON.parse(cb);",
                "    var firstFaceEmotions = data[0]['scores'];",
                "    var mostApparentEmotion = \"anger\";",
                "    var mostApparentEmotionCertainty = 0;",
                "    for (var emotion in firstFaceEmotions){",
                "      if (firstFaceEmotions.hasOwnProperty(emotion)) {",
                "           if (firstFaceEmotions[emotion] > mostApparentEmotionCertainty) {",
                "              mostApparentEmotion = emotion;",
                "              mostApparentEmotionCertainty = firstFaceEmotions[emotion];",
                "           }",
                "      }",
                "    }",
                "    notepad.mostApparentEmotion = mostApparentEmotion;",
                "    notepad.mostApparenteEmotionCertainty = mostApparentEmotionCertainty;",
                "  ",
                "    //now set jibo.face.values or whatever and set values to dirty and update",
                "    ",
                "    // set the texture of the sprite to the imageURL",
                "    notepad.photo.texture = PIXI.Texture.fromImage(notepad.imageUrl);",
                "      ",
                "    // add the sprite to the stage",
                "    jibo.face.stage.addChild(notepad.photo);",
                "  });",
                "}"
            ]
        },
        "asset-pack": "core",
        "parent": 1,
        "decorators": []
    },
    "c646d335-178f-4567-a2f2-f6f801ea02c5": {
        "id": "c646d335-178f-4567-a2f2-f6f801ea02c5",
        "class": "TimeoutJs",
        "name": "pause with photo on screen for 10 seconds",
        "options": {
            "getTime": [
                "() => {",
                "    return 1000;",
                "}"
            ]
        },
        "asset-pack": "core",
        "parent": 1
    },
    "9e9f6dac-991b-4207-be40-d7c31fcc34fa": {
        "id": "9e9f6dac-991b-4207-be40-d7c31fcc34fa",
        "class": "Switch",
        "name": "",
        "options": {},
        "asset-pack": "core",
        "parent": 1,
        "children": [
            "a4690b88-b3e6-479a-a932-e95628ca428c",
            "1b5d9d7d-1f1f-4116-bf25-9a3739a4f802",
            "94d242bb-72a8-49a1-86e9-3e9b1959c6ce"
        ]
    },
    "a4690b88-b3e6-479a-a932-e95628ca428c": {
        "id": "a4690b88-b3e6-479a-a932-e95628ca428c",
        "class": "ExecuteScript",
        "name": "if sad",
        "options": {
            "exec": [
                "() => {",
                "}"
            ]
        },
        "asset-pack": "core",
        "parent": "9e9f6dac-991b-4207-be40-d7c31fcc34fa",
        "decorators": [
            "f3ed10d6-9bdc-45a7-a29a-2636cf33d411"
        ]
    },
    "1b5d9d7d-1f1f-4116-bf25-9a3739a4f802": {
        "id": "1b5d9d7d-1f1f-4116-bf25-9a3739a4f802",
        "class": "ExecuteScript",
        "name": "if neutral",
        "options": {
            "exec": [
                "() => {",
                "}"
            ]
        },
        "asset-pack": "core",
        "parent": "9e9f6dac-991b-4207-be40-d7c31fcc34fa"
    },
    "94d242bb-72a8-49a1-86e9-3e9b1959c6ce": {
        "id": "94d242bb-72a8-49a1-86e9-3e9b1959c6ce",
        "class": "ExecuteScript",
        "name": "if happy",
        "options": {
            "exec": [
                "() => {",
                "}"
            ]
        },
        "asset-pack": "core",
        "parent": "9e9f6dac-991b-4207-be40-d7c31fcc34fa"
    },
    "f3ed10d6-9bdc-45a7-a29a-2636cf33d411": {
        "id": "f3ed10d6-9bdc-45a7-a29a-2636cf33d411",
        "class": "Case",
        "name": "",
        "options": {
            "conditional": [
                "() => {",
                "  if (!notepad.mostApparentEmotion == \"sadness\") {",
                "    return false;",
                "  }",
                "  let howSad = notepad.mostApparenteEmotionCertainty;",
                "}"
            ]
        },
        "asset-pack": "core"
    }
}